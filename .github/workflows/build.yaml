name: Build and Release Executable

on:
  push:
    branches:
      - main
      - test*

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8  # Kies de Python-versie die je nodig hebt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller watchdog

    - name: Update Version
      id: update_version
      run: |
        python update_version.py version.txt

    - name: Build Executable
      run: |
        pyinstaller.exe --onefile --windowed --icon=icon.ico .\FileWatcher.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: executable
        path: dist  # Hier moet je de map aangeven waar PyInstaller het uitvoerbare bestand genereert

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ steps.update_version.outputs.new_version }}
        release_name: Release v${{ steps.update_version.outputs.new_version }}
        body: |
          Changes in this release.

    - name: Upload Executable
      id: upload_executable
      uses: actions/upload-artifact@v2
      with:
        name: executable
        path: dist

    - name: Attach Executable to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/FileWatcher.exe
        asset_name: FileWatcher.exe
        asset_content_type: application/octet-stream
